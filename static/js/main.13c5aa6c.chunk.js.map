{"version":3,"sources":["utils/API.js","components/SearchResultContainer.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","BASEURL","SearchResultContainer","props","handleChange","event","target","value","name","setState","state","employees","allEmployees","search","bind","API","then","res","console","log","data","catch","err","filteredEmployees","this","filter","filteredParam","startsWith","map","email","onSubmit","handleSubmit","className","htmlFor","onChange","handleInputChange","type","placeholder","id","onClick","Component","List","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAOe,EACL,WACN,OAAOA,IAAMC,IAAIC,0C,OCLfC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAyBTC,aAAe,SAACC,GAEf,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKC,SAAL,eACGD,EAAOD,KA9BR,EAAKG,MAAQ,CACXC,UAAW,GACXC,aAAc,GACdC,OAAQ,IAGV,EAAKT,aAAe,EAAKA,aAAaU,KAAlB,gBATH,E,qDAcnB,WAAoB,IAAD,OACjBC,IACCC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,MAChB,EAAKX,SAAS,CAAEE,UAAWM,EAAIG,UAEhCC,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,Q,oBAgBjB,WAAU,IACLC,EADI,OAGJC,KAAKd,MAAMG,SACfU,EAAoBC,KAAKd,MAAMC,UAAUc,QAAO,SAAAC,GAAa,OAC3DA,EAAclB,KAAKmB,WAAW,EAAKjB,MAAMG,YAE5BU,EAAkBK,KAAI,SAAAF,GACnC,OAAO,cAAC,EAAD,CAAgClB,KAAMkB,EAAclB,MAAzCkB,EAAcG,UAElC,OACE,8BACE,sBAAMC,SAAWN,KAAKO,aAAtB,SACA,sBAAKC,UAAU,aAAf,UACE,uBAAOC,QAAQ,SAAf,qBACA,uBACEC,SAAUV,KAAKW,kBACf5B,MAAOiB,KAAKd,MAAMG,OAClBL,KAAK,SACL4B,KAAK,OACLJ,UAAU,eACVK,YAAY,yBACZC,GAAG,WAEL,wBAAQC,QAASf,KAAKd,MAAMG,OAAQmB,UAAU,uBAA9C,+B,GA9D4BQ,aA0E9BC,E,4JACJ,WACE,OACE,gCACE,6BAAKjB,KAAKrB,MAAMK,OAChB,6BAAKgB,KAAKrB,MAAM0B,e,GALLW,aAWJtC,IClFAwC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.13c5aa6c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/\";\n\nconst KEY = \"?results=60\";\n\n\nexport default {\n  search: function() {\n    return axios.get(BASEURL + KEY);\n  }\n};\n\n\n","import { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport API from \"../utils/API\";\n\nclass SearchResultContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      employees: [],\n      allEmployees: [],\n      search: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n\n  };\n  \n\n  componentDidMount(){\n    API.search()\n    .then(res => {\n      console.log(res.data);\n      this.setState({ employees: res.data });\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n\n handleChange = (event) => {\n\n  const target = event.target;\n  const value = target.value;\n  const name = target.name;\n\n  this.setState({\n    [name]: value\n  });\n };\n\n render() {\n  let filteredEmployees;\n\n  if (this.state.search)\n  filteredEmployees = this.state.employees.filter(filteredParam =>\n    filteredParam.name.startsWith(this.state.search));\n  \n  const emails = filteredEmployees.map(filteredParam => {\n    return <List key={filteredParam.email} name={filteredParam.name} />\n  });\n  return (\n    <div>\n      <form onSubmit= {this.handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={this.handleInputChange}\n          value={this.state.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for an Employee\"\n          id=\"search\"\n        />\n        <button onClick={this.state.search} className=\"btn btn-primary mt-3\">\n          Search\n        </button>\n      </div>\n    </form>\n      \n    </div>\n  )\n\n  };\n};\n\nclass List extends Component {\n  render() {\n    return (\n      <div>\n        <h1>{this.props.name}</h1>\n        <h2>{this.props.email}</h2>\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n  ","import React from \"react\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\n\nfunction App() {\n  return <SearchResultContainer />;\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}